/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  heroHeadingText?: string;
  heroHeadingDescription?: string;
};

export type Products = {
  _id: string;
  _type: "products";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  productSlug?: Slug;
  description?: string;
  price?: number;
  tags?: Array<string>;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "categories";
  };
  featured?: boolean;
  bestSeller?: boolean;
  productImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "image";
  };
};

export type Categories = {
  _id: string;
  _type: "categories";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  categories?: string;
};

export type FooterAdditionalSection = {
  _id: string;
  _type: "footerAdditionalSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sectionTitle?: string;
  sectionList?: Array<{
    itemName?: string;
    url?: string;
    _type: "sectionList";
    _key: string;
  }>;
};

export type FooterInfo = {
  _id: string;
  _type: "footerInfo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  footer?: string;
  description?: string;
  address?: string;
  emailAddress?: string;
  phoneNumber?: string;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = SiteSettings | Products | Categories | FooterAdditionalSection | FooterInfo | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: FOOTER_INFO
// Query: *[_type == "footerInfo"]{  _id,  _type,  address,    description,    emailAddress,    footer,    phoneNumber,}
export type FOOTER_INFOResult = Array<{
  _id: string;
  _type: "footerInfo";
  address: string | null;
  description: string | null;
  emailAddress: string | null;
  footer: string | null;
  phoneNumber: string | null;
}>;
// Variable: FOOTER_NEW_SECTION
// Query: *[_type == "footerAdditionalSection"]{  _id,  _createdAt,    sectionList[]{      itemName,      _key,      url,    },    sectionTitle} | order(_createdAt asc)
export type FOOTER_NEW_SECTIONResult = Array<{
  _id: string;
  _createdAt: string;
  sectionList: Array<{
    itemName: string | null;
    _key: string;
    url: string | null;
  }> | null;
  sectionTitle: string | null;
}>;
// Variable: FEATURED_PRODUCTS_CARDS
// Query: *[_type == "products" && featured == true]{  _id,  title,  tags,  price,  productImage{    asset->{      _id,      url,      metadata {        dimensions {          width,          height        },        lqip      }    },    caption,  }}
export type FEATURED_PRODUCTS_CARDSResult = Array<{
  _id: string;
  title: string | null;
  tags: Array<string> | null;
  price: number | null;
  productImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
        lqip: string | null;
      } | null;
    } | null;
    caption: string | null;
  } | null;
}>;
// Variable: PRODUCTS
// Query: *[_type == "products"]{  _id,  title,  description,  price,  image{    asset->{      _id,      url,      metadata {        dimensions {          width,          height        },        lqip      }    },    caption,  }}
export type PRODUCTSResult = Array<{
  _id: string;
  title: string | null;
  description: string | null;
  price: number | null;
  image: null;
}>;
// Variable: HERO_SECTION_SETTINGS
// Query: *[_type == "siteSettings"]{  _id,  heroHeadingDescription,  heroHeadingText,}
export type HERO_SECTION_SETTINGSResult = Array<{
  _id: string;
  heroHeadingDescription: string | null;
  heroHeadingText: string | null;
}>;
// Variable: BESTSELLER_PRODUCTS
// Query: *[_type == "products" && bestSeller == true] {  _id,  title,  price,  "slug": productSlug.current,  productImage {    asset->{      _id,      url,      metadata {        dimensions {          width,          height        },        lqip      }    },    caption  }}
export type BESTSELLER_PRODUCTSResult = Array<{
  _id: string;
  title: string | null;
  price: number | null;
  slug: string | null;
  productImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
        lqip: string | null;
      } | null;
    } | null;
    caption: string | null;
  } | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n*[_type == \"footerInfo\"]{\n  _id,\n  _type,\n  address,\n    description,\n    emailAddress,\n    footer,\n    phoneNumber,\n}": FOOTER_INFOResult;
    "\n*[_type == \"footerAdditionalSection\"]{\n  _id,\n  _createdAt,\n    sectionList[]{\n      itemName,\n      _key,\n      url,\n    },\n    sectionTitle\n} | order(_createdAt asc)": FOOTER_NEW_SECTIONResult;
    "\n*[_type == \"products\" && featured == true]{\n  _id,\n  title,\n  tags,\n  price,\n  productImage{\n    asset->{\n      _id,\n      url,\n      metadata {\n        dimensions {\n          width,\n          height\n        },\n        lqip\n      }\n    },\n    caption,\n  }\n}": FEATURED_PRODUCTS_CARDSResult;
    "\n*[_type == \"products\"]{\n  _id,\n  title,\n  description,\n  price,\n  image{\n    asset->{\n      _id,\n      url,\n      metadata {\n        dimensions {\n          width,\n          height\n        },\n        lqip\n      }\n    },\n    caption,\n  }\n}": PRODUCTSResult;
    "\n*[_type == \"siteSettings\"]{\n  _id,\n  heroHeadingDescription,\n  heroHeadingText,\n}": HERO_SECTION_SETTINGSResult;
    "\n*[_type == \"products\" && bestSeller == true] {\n  _id,\n  title,\n  price,\n  \"slug\": productSlug.current,\n  productImage {\n    asset->{\n      _id,\n      url,\n      metadata {\n        dimensions {\n          width,\n          height\n        },\n        lqip\n      }\n    },\n    caption\n  }\n}": BESTSELLER_PRODUCTSResult;
  }
}
